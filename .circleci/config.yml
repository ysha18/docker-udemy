
version: 2.1
orbs: 
  eb: circleci/aws-elastic-beanstalk@2.0.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    machine: true
    steps:
     - checkout
     # build the application image
     - run: 
        name: build app image
        working_directory: ./frontend
        command: |
          docker build -t hyeo/app-image .

    #  - run: 
    #     name: run test
    #     working_directory: ./frontend
    #     command: |
    #       docker run hyeo/app-image npm run test -- --coverage

workflows:
  main-workflow:
    jobs:
      - build
      - eb/deploy:
          context: aws-creds
          environment-name: Dockerreact-env
          application-name: docker-react
          app-dir: /usr/share/nginx/html
          filters:
            branches:
              only:
                - feature
          requires:
            - build

  # build-frontend:
  #   docker:
  #     - image: node:16-alpine
  #   steps:
  #     - checkout
  #     - run:
  #         name: Build front-end
  #         working_directory: ./frontend
  #         command: |
  #           set -ex
  #           npm i
  #           npm run build
  #     - persist_to_workspace:
  #         root: ./frontend
  #         paths:
  #           - build
  #     # - save_cache:
  #     #     paths: [./build]
  #     #     key: frontend-build     

  # run-app:
  #   docker:
  #     - image: nginx
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/
  #     - run:
  #         name: run nginx
  #         working_directory: /usr/share/nginx/html
  #         command: |
  #           pwd
  #           cp -r /tmp/build/* .
  #           ls -la

      
  
  # react-app:
  #   docker:
  #     - image: 349703987105.dkr.ecr.us-east-2.amazonaws.com/udemy:latest
  #       aws_auth:
  #         aws_access_key_id: AKIAVC273L6Q6BB43FY4
  #         aws_secret_access_key: $ECR_AWS_SECRET_ACCESS_KEY
  #   steps:
  #     - checkout
  #     - run:
  #         command: |
  #           docker build .

 

# Invoke jobs via workflows
# workflows:
#   main-workflow:
#     jobs:
#       - build-frontend
#       - run-app:
#           requires: [build-frontend]
